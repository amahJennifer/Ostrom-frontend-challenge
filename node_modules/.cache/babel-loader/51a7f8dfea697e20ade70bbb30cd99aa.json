{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferamah/Documents/ostrom-frontend-challenge/src/components/StudentTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"./Button\";\nimport Students from \"./Students\";\nimport Modal from \"./Modal\";\nimport AddStudent from \"./AddStudent\";\nimport { studentsData } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StudentTable = () => {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [student, setStudent] = useState();\n  const [showModal, setShowModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState('Add Student');\n\n  const onEdit = data => {\n    setModalTitle('Edit Student');\n    setStudent(data);\n    setShowModal(true);\n  };\n\n  const onDelete = id => {\n    setStudents([...students.filter(s => s.id !== id)]);\n  };\n\n  const onAdd = () => {\n    setModalTitle('Add Student');\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n    setStudent(undefined);\n  };\n\n  const onSave = (e, data) => {\n    e.preventDefault();\n    onCloseModal();\n    const {\n      length\n    } = students;\n\n    if (length) {\n      data.id = students[length - 1].id + 1;\n    } else {\n      data.id = 1;\n    }\n\n    setStudents([...students, data]);\n  };\n\n  const onUpdate = (e, data) => {\n    e.preventDefault();\n    onCloseModal();\n    const {\n      id\n    } = data;\n    const editStudentsList = students.map(student => student.id === id ? data : student);\n    setStudents(editStudentsList);\n  };\n\n  useEffect(() => {\n    setStudents(studentsData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Add-button\",\n      \"data-testid\": \"add-student-button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        name: \"Add Student\",\n        onClick: onAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Students, {\n      students: students,\n      onEdit: onEdit,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      title: modalTitle,\n      children: /*#__PURE__*/_jsxDEV(AddStudent, {\n        student: student,\n        onSave: onSave,\n        onUpdate: onUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }, this),\n      onClose: onCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StudentTable, \"3Jd/SN/PvzZaIi+nrSltCyFWEjk=\");\n\n_c = StudentTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentTable\");","map":{"version":3,"sources":["/Users/jenniferamah/Documents/ostrom-frontend-challenge/src/components/StudentTable.tsx"],"names":["React","useEffect","useState","Button","Students","Modal","AddStudent","studentsData","StudentTable","students","setStudents","student","setStudent","showModal","setShowModal","modalTitle","setModalTitle","onEdit","data","onDelete","id","filter","s","onAdd","onCloseModal","undefined","onSave","e","preventDefault","length","onUpdate","editStudentsList","map"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent, useEffect, useState} from \"react\";\nimport Button from \"./Button\";\nimport Students from \"./Students\";\nimport Modal from \"./Modal\";\nimport AddStudent from \"./AddStudent\";\nimport {ModalTitleType, TStudent} from \"../types\";\nimport {studentsData} from \"../utils\";\n\n\nexport const StudentTable:React.FC<any> =()=>{\n    const [students, setStudents] = useState<TStudent[]>([])\n    const [student, setStudent] = useState<TStudent | undefined>()\n    const [showModal, setShowModal] = useState<boolean>(false)\n    const [modalTitle,setModalTitle] = useState<ModalTitleType>('Add Student')\n\n    const onEdit = (data: TStudent) => {\n        setModalTitle('Edit Student')\n        setStudent(data)\n        setShowModal(true)\n    }\n\n    const onDelete = (id: number) => {\n        setStudents([...students.filter((s) => s.id !== id)])\n    }\n\n    const onAdd = () => {\n        setModalTitle('Add Student')\n        setShowModal(true)\n    }\n\n    const onCloseModal = () => {\n        setShowModal(false)\n        setStudent(undefined)\n    }\n\n\n    const onSave = (e: SyntheticEvent, data: TStudent) => {\n        e.preventDefault()\n        onCloseModal()\n        const {length} = students\n        if (length) {\n            data.id = students[length - 1].id + 1\n        } else {\n            data.id = 1\n        }\n        setStudents([...students, data])\n    }\n\n    const onUpdate =(e:SyntheticEvent,data:TStudent)=>{\n        e.preventDefault();\n        onCloseModal();\n        const {id}=data\n        const editStudentsList = students.map((student)=>student.id===id?data:student)\n        setStudents(editStudentsList)\n    }\n\n    useEffect(() => {\n        setStudents(studentsData)\n    }, [])\n\n    return (\n        <>\n            <div className=\"Add-button\" data-testid={\"add-student-button\"}>\n                <Button name=\"Add Student\" onClick={onAdd}/>\n            </div>\n            <Students students={students} onEdit={onEdit} onDelete={onDelete}/>\n            <Modal show={showModal}\n                   title={modalTitle}\n                   children={<AddStudent student={student} onSave={onSave} onUpdate={onUpdate}/>}\n                   onClose={onCloseModal}/>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}