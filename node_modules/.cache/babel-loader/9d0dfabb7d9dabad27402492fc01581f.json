{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferamah/Documents/ostrom-frontend-challenge/src/components/Modal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './Modal.css';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    children,\n    show,\n    title,\n    onClose\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(show);\n  useEffect(() => {\n    setIsOpen(show);\n  }, [show]);\n\n  const close = () => {\n    onClose && onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Modal ${isOpen ? 'flex' : 'hidden'}`,\n    \"aria-labelledby\": \"modal-title\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"data-testid\": \"student-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Modal-content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: close,\n          children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Modal, \"Hz0E/JuNAqEc6nISHrtgbHw4SJE=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/jenniferamah/Documents/ostrom-frontend-challenge/src/components/Modal.tsx"],"names":["useEffect","useState","Modal","children","show","title","onClose","isOpen","setIsOpen","close"],"mappings":";;;AAAA,SAAmBA,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,OAAO,aAAP;;;;AAGA,MAAMC,KAAK,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAACC,IAAAA,QAAD;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAAiD;AAE5D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,IAAD,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS,CAACJ,IAAD,CAAT;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMK,KAAK,GAAG,MAAM;AAChBH,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAG,SAAQC,MAAM,GAAG,MAAH,GAAY,QAAS,EAApD;AACK,uBAAgB,aADrB;AACmC,IAAA,IAAI,EAAC,QADxC;AAEK,kBAAW,MAFhB;AAGK,mBAAY,eAHjB;AAAA,2BAKI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEI,KAAjB;AAAA,iCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOKN,QAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA7BD;;GAAMD,K;;KAAAA,K;AAsCN,eAAeA,KAAf","sourcesContent":["import {ReactNode, useEffect, useState} from 'react'\nimport './Modal.css'\nimport {ReactComponent as Close} from '../assets/close.svg'\n\nconst Modal = ({children, show, title, onClose}: ModalProps) => {\n\n    const [isOpen, setIsOpen] = useState(show)\n\n    useEffect(() => {\n        setIsOpen(show)\n    }, [show])\n\n    const close = () => {\n        onClose && onClose()\n    }\n\n    return (\n        <div className={`Modal ${isOpen ? 'flex' : 'hidden'}` }\n             aria-labelledby=\"modal-title\" role=\"dialog\"\n             aria-modal=\"true\"\n             data-testid='student-modal'\n        >\n            <div className=\"Modal-content-wrapper\">\n                <div className=\"Modal-header\">\n                    <h4>{title}</h4>\n                    <button onClick={close}>\n                        <Close />\n                    </button>\n                </div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\ninterface ModalProps {\n    children: ReactNode,\n    show: boolean,\n    title: string,\n    onClose?: () => void\n}\n\nexport default Modal\n"]},"metadata":{},"sourceType":"module"}